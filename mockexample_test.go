// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package main

import (
	"sync"
)

// Ensure, that ExampleMock does implement Example.
// If this is not the case, regenerate this file with moq.
var _ Example = &ExampleMock{}

// ExampleMock is a mock implementation of Example.
//
//	func TestSomethingThatUsesExample(t *testing.T) {
//
//		// make and configure a mocked Example
//		mockedExample := &ExampleMock{
//			HelleFunc: func(args Args) Returns {
//				panic("mock out the Helle method")
//			},
//		}
//
//		// use mockedExample in code that requires Example
//		// and then make assertions.
//
//	}
type ExampleMock struct {
	// HelleFunc mocks the Helle method.
	HelleFunc func(args Args) Returns

	// calls tracks calls to the methods.
	calls struct {
		// Helle holds details about calls to the Helle method.
		Helle []struct {
			// Args is the args argument value.
			Args Args
		}
	}
	lockHelle sync.RWMutex
}

// Helle calls HelleFunc.
func (mock *ExampleMock) Helle(args Args) Returns {
	if mock.HelleFunc == nil {
		panic("ExampleMock.HelleFunc: method is nil but Example.Helle was just called")
	}
	callInfo := struct {
		Args Args
	}{
		Args: args,
	}
	mock.lockHelle.Lock()
	mock.calls.Helle = append(mock.calls.Helle, callInfo)
	mock.lockHelle.Unlock()
	return mock.HelleFunc(args)
}

// HelleCalls gets all the calls that were made to Helle.
// Check the length with:
//
//	len(mockedExample.HelleCalls())
func (mock *ExampleMock) HelleCalls() []struct {
	Args Args
} {
	var calls []struct {
		Args Args
	}
	mock.lockHelle.RLock()
	calls = mock.calls.Helle
	mock.lockHelle.RUnlock()
	return calls
}
